
/*
 * This is the application and entity model for the 21-Points (https://github.com/mraible/21-points) application from Matt Raible
 */

application {
  config {
    applicationType monolith,
    baseName HealthPoints
    packageName com.okta.developer,
    authenticationType oauth2,
    prodDatabaseType postgresql,
    buildTool gradle,
    searchEngine elasticsearch,
    testFrameworks [cypress],
    clientFramework react,
    enableTranslation true,
    nativeLanguage en,
    languages [en, es]
  }
  entities Points, BloodPressure, Weight, Preferences
}

// JDL definition for application 'TwentyOnePoints' generated with command 'jhipster export-jdl'

entity Blog {
  name String required minlength(3)
  handle String required minlength(2)
}

entity Post {
  title String required
  content TextBlob required
  date Instant required
}

entity Tag {
  name String required minlength(2)
}








@readOnly
@dto(mapstruct)
@service(serviceImpl)
@paginate(pager)
/*
test comment
*/
entity bloodPressure(blood) {
/*
javadoc timestamp
*/
  timestamp ZonedDateTime required,
  systolic Integer min(9) max(100) /* syslogic comment */,
  /* diastolic comment */diastolic Integer required, /* name comment */
    name String required maxlength(150)
    handle String required minlength(2)
}
/*
test comment
*/
entity Weight {
/*
test timestamp
*/
  timestamp ZonedDateTime required
  weight Double required
}
entity Points {
  date LocalDate required
  exercise Integer
  meals Integer
  alcohol Integer
  notes String maxlength(140)
}
entity Preferences {
  weeklyGoal Integer required min(10) max(21)
  weightUnits Units required
}

enum Units {
  KG,
  L
}

relationship ManyToOne {
  /* before */BloodPressure to /*to*/ Bb
   /* before */Blog{user(login)} to  /*to*/User
  Post{blog(name) required} to Blog

}

relationship ManyToMany {
  Post{tag(name)} to Tag{entry}
}

relationship OneToOne {
  Preferences{user(login)} to User
}
paginate BloodPressure, Weight with infinite-scroll
paginate Points with pagination

